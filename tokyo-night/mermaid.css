:root {
  --node-fill: var(--bg-color);
  --node-border: var(--color-white);
  --cluster-fill: transparent;
  --cluster-border: var(--color-bright-yellow);
  --note-fill: transparent;
  --note-border: var(--color-yellow);
  --mermaid-color: var(--text-color);
}

text {
  color: var(--text-color);
  fill: var(--text-color);
}

/* Flowchart variables */
/* Sequence Diagram variables */
/* Gantt chart variables */
/* state colors */
.label {
  font-family: var(--mermaid-font-family);
  color: var(--color-white); }

.label text {
  fill: var(--color-white); }

.node rect,
.node circle,
.node ellipse,
.node polygon {
  fill: var(--node-fill);
  stroke: var(--color-bright-purple);
}

.arrowheadPath {
  fill: var(--text-color);
}

.edgePath .path {
  stroke: var(--text-color);
}

.edgeLabel {
  background-color: var(--color-bright-black);
}

.cluster text {
  fill: var(--text-color); }

text.actor {
  fill: var(--text-color);
}

.actor-line {
  stroke: var(--color-black);
}

.messageLine0 {
  stroke: var(--text-color);
}

.messageLine1 {
  stroke: var(--text-color);
}

#arrowhead {
  fill: var(--text-color); }

.sequenceNumber {
  fill: var(--color-bright-green); }

#sequencenumber {
  fill: var(--text-color); }

#crosshead path {
  fill: var(--text-color) !important;
  stroke: var(--text-color) !important; }

.messageText,
.labelText,
.loopText {
  fill: var(--text-color);
}

.note {
  stroke: var(--note-border);
  fill: var(--note-fill);
}

.noteText {
  fill: var(--color-yellow);
  stroke: none;
  
  font-family: var(--mermaid-font-family);
  font-size: 14px; }

.activation0 {
  fill: #f4f4f4;
  stroke: #666; }

.activation1 {
  fill: #f4f4f4;
  stroke: #666; }

.activation2 {
  fill: #f4f4f4;
  stroke: #666; }

/** Section styling */
.mermaid-main-font {
  font-family: "trebuchet ms", verdana, arial;
  font-family: var(--mermaid-font-family); }

.section {
  stroke: none;
  opacity: 0.2; }

.section0 {
  fill: rgba(102, 102, 255, 0.49); }

.section2 {
  fill: #fff400; }

.section1,
.section3 {
  fill: white;
  opacity: 0.2; }

.sectionTitle0 {
  fill: var(--text-color); }

.sectionTitle1 {
  fill: var(--text-color); }

.sectionTitle2 {
  fill: var(--text-color); }

.sectionTitle3 {
  fill: var(--text-color); }

/* Grid and axis */
.grid .tick {
  stroke: var(--text-color);
  opacity: 0.3;
}

.grid path {
  stroke-width: 0; }

/* Today line */
.today {
  fill: none;
  stroke: var(--color-bright-red);
  stroke-width: 2px; }

/* Task styling */
/* Default task */
.task {
  stroke-width: 2; }

.taskText {
  text-anchor: middle;
  
  font-family: var(--mermaid-font-family); }

.taskText:not([font-size]) {
  font-size: 11px; }

.taskTextOutsideRight {
  fill: var(--text-color);
  text-anchor: start;
  font-size: 11px;
  
  font-family: var(--mermaid-font-family); }

.taskTextOutsideLeft {
  fill: var(--text-color);
  text-anchor: end;
  font-size: 11px; }

/* Special case clickable */
.task.clickable {
  cursor: pointer; }

.taskText.clickable {
  cursor: pointer;
  fill: var(--color-bright-blue) !important;
  font-weight: bold; }

.taskTextOutsideLeft.clickable {
  cursor: pointer;
  fill: var(--color-bright-blue) !important;
  font-weight: bold; }

.taskTextOutsideRight.clickable {
  cursor: pointer;
  fill: var(--color-bright-blue) !important;
  font-weight: bold; }

/* Specific task settings for the sections*/
.taskText0,
.taskText1,
.taskText2,
.taskText3 {
  fill: var(--text-color); }

.task0,
.task1,
.task2,
.task3 {
  fill: var(--color-black);
  stroke: var(--color-bright-purple); }

.taskTextOutside0,
.taskTextOutside2 {
  fill: var(--text-color); }

.taskTextOutside1,
.taskTextOutside3 {
  fill: var(--text-color); }

/* Active task */
.active0,
.active1,
.active2,
.active3 {
  fill: var(--color-bright-black);
  stroke: var(--color-bright-green);
}

.activeText0,
.activeText1,
.activeText2,
.activeText3 {
  fill: var(--text-color) !important; }

/* Completed task */
.done0,
.done1,
.done2,
.done3 {
  stroke: var(--color-black);
  fill: var(--bg-color);
  stroke-width: 2; }

.doneText0,
.doneText1,
.doneText2,
.doneText3 {
  fill: var(--color-white) !important; }

/* Tasks on the critical line */
.crit0,
.crit1,
.crit2,
.crit3 {
  stroke: var(--color-bright-red);
  fill: var(--bg-color);
}

.activeCrit0,
.activeCrit1,
.activeCrit2,
.activeCrit3 {
  stroke: var(--color-bright-red);
  fill: var(--color-bright-black);
  stroke-width: 2; }

.doneCrit0,
.doneCrit1,
.doneCrit2,
.doneCrit3 {
  stroke: var(--color-red);
  fill: var(--bg-color);
}

.doneCritText0,
.doneCritText1,
.doneCritText2,
.doneCritText3 {
  fill: var(--text-color) !important; }

.activeCritText0,
.activeCritText1,
.activeCritText2,
.activeCritText3 {
  fill: var(--text-color) !important; }

.titleText {
  fill: var(--text-color);
}

g.classGroup text {
  fill: var(--color-bright-purple);
}

g.classGroup rect {
  fill: var(--node-fill);
  stroke: var(--color-bright-purple);
}

g.classGroup line {
  stroke: var(--color-bright-purple);
}

.classLabel .box {
  fill: var(--bg-color);
  opacity: 1;
}

.classLabel .label {
  fill: var(--color-bright-purple);
}

.relation {
  stroke: var(--color-bright-purple);
}

#compositionStart {
  fill: var(--color-bright-purple);
  stroke: var(--color-bright-purple);
}

#compositionEnd {
  fill: var(--color-bright-purple);
  stroke: var(--color-bright-purple);
}

#aggregationStart {
  fill: var(--node-fill);
  stroke: var(--color-bright-purple);
}

#aggregationEnd {
  fill: var(--node-fill);
  stroke: var(--color-bright-purple);
}

#dependencyStart {
  fill: var(--color-bright-purple);
  stroke: var(--color-bright-purple);
}

#dependencyEnd {
  fill: var(--color-bright-purple);
  stroke: var(--color-bright-purple);
}

#extensionStart {
  fill: var(--color-bright-purple);
  stroke: var(--color-bright-purple);
}

#extensionEnd {
  fill: var(--color-bright-purple);
  stroke: var(--color-bright-purple);
}

.commit-id,
.commit-msg,
.branch-label {
  fill: var(--text-color);
  color: var(--text-color);
}

.pieTitleText {
  fill: var(--text-color);
}

g.stateGroup text {
  fill: var(--color-bright-purple);
}

g.stateGroup text {
  fill: var(--color-bright-purple);
}

g.stateGroup .state-title {
  fill: var(--text-color);
}

g.stateGroup rect {
  fill: var(--node-fill);
  stroke: var(--color-bright-purple); 
}

g.stateGroup line {
  stroke: var(--color-bright-purple);
}

.transition {
  stroke: var(--color-bright-purple);
}

.stateGroup .composit {
  fill: var(--color-bright-black);
}

.state-note {
  stroke: var(--cluster-border);
  fill: transparent; 
}

.state-note text {
  fill: var(--text-color);
}

.stateLabel .box {
  fill: var(--node-fill);
}

.stateLabel text {
  fill: var(--text-color);
}

.statediagram-cluster rect {
  fill: var(--node-fill);
  stroke: var(--color-bright-purple);
}

.statediagram-state .divider {
  stroke: var(--color-bright-purple); 
}

.statediagram-cluster.statediagram-cluster .inner {
  fill: var(--color-bright-black);
}
.statediagram-cluster.statediagram-cluster-alt .inner {
  fill: var(--color-black);
}

.statediagram-state rect.divider {
  fill: var(--color-black);
}

.statediagram-note rect {
  stroke: var(--cluster-border);
  fill: transparent;
}

.node circle.state-start {
  fill: var(--text-color);
  stroke: var(--text-color);
}

.node circle.state-end {
  fill: var(--text-color);
  stroke: var(--color-bright-black);
}

#statediagram-barbEnd {
  fill: var(--color-bright-purple); 
}


/* Git */

.commit {
  fill: var(--color-yellow);
  stroke: none;
}


/* ER */

[fill="white"] {
  fill: var(--bg-color);
}

[fill="honeydew"] {
  fill: var(--bg-color);
}

[fill="#8FBC8F"] {
  fill: var(--color-green);
}

[fill="#7CFC00"] {
  fill: var(--color-bright-green);
}

[stroke="black"] {
  stroke: var(--text-color);
}

[stroke="gray"] {
  stroke: var(--color-white);
}

[fill="#666"] {
  fill: var(--color-white);
}

[fill="#FFF8DC"] {
  fill: var(--bg-color);
}

[fill="#FFF8DC"] + g [stroke="#666"],
[fill="#FFF8DC"] + g path {
  stroke: var(--color-bright-white);
}